[2023-04-12T14:31:29.125+0000] {taskinstance.py:1090} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: nfl_transformation_dag.task_pyspark scheduled__2023-04-11T00:00:00+00:00 [queued]>
[2023-04-12T14:31:29.140+0000] {taskinstance.py:1090} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: nfl_transformation_dag.task_pyspark scheduled__2023-04-11T00:00:00+00:00 [queued]>
[2023-04-12T14:31:29.141+0000] {taskinstance.py:1288} INFO - 
--------------------------------------------------------------------------------
[2023-04-12T14:31:29.142+0000] {taskinstance.py:1289} INFO - Starting attempt 26 of 26
[2023-04-12T14:31:29.143+0000] {taskinstance.py:1290} INFO - 
--------------------------------------------------------------------------------
[2023-04-12T14:31:29.164+0000] {taskinstance.py:1309} INFO - Executing <Task(_PythonDecoratedOperator): task_pyspark> on 2023-04-11 00:00:00+00:00
[2023-04-12T14:31:29.173+0000] {standard_task_runner.py:55} INFO - Started process 12216 to run task
[2023-04-12T14:31:29.182+0000] {standard_task_runner.py:82} INFO - Running: ['***', 'tasks', 'run', 'nfl_transformation_dag', 'task_pyspark', 'scheduled__2023-04-11T00:00:00+00:00', '--job-id', '963', '--raw', '--subdir', 'DAGS_FOLDER/data_ingestion.py', '--cfg-path', '/tmp/tmp9l3xetl2']
[2023-04-12T14:31:29.185+0000] {standard_task_runner.py:83} INFO - Job 963: Subtask task_pyspark
[2023-04-12T14:31:29.290+0000] {task_command.py:389} INFO - Running <TaskInstance: nfl_transformation_dag.task_pyspark scheduled__2023-04-11T00:00:00+00:00 [running]> on host a2e619923d04
[2023-04-12T14:31:29.379+0000] {taskinstance.py:1516} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=***
AIRFLOW_CTX_DAG_ID=nfl_transformation_dag
AIRFLOW_CTX_TASK_ID=task_pyspark
AIRFLOW_CTX_EXECUTION_DATE=2023-04-11T00:00:00+00:00
AIRFLOW_CTX_TRY_NUMBER=26
AIRFLOW_CTX_DAG_RUN_ID=scheduled__2023-04-11T00:00:00+00:00
[2023-04-12T14:31:29.384+0000] {subprocess.py:63} INFO - Tmp dir root location: 
 /tmp
[2023-04-12T14:31:29.391+0000] {subprocess.py:75} INFO - Running command: ['/bin/bash', '-c', 'gcloud dataproc jobs submit pyspark                 --cluster=nfl-spark-cluster                 --region=europe-west6                 --jars=gs://spark-lib/bigquery/spark-bigquery-with-dependencies_2.12-0.30.0.jar                gs://nfl-data-lake_nfl-de-project/code/transform_pyspark.py                 --                     --year=2020                     --season_type=2 ']
[2023-04-12T14:31:29.419+0000] {subprocess.py:86} INFO - Output:
[2023-04-12T14:31:36.511+0000] {subprocess.py:93} INFO - Job [b3b5273645a74ad28fa0fb96ba71794a] submitted.
[2023-04-12T14:31:36.512+0000] {subprocess.py:93} INFO - Waiting for job output...
[2023-04-12T14:31:47.731+0000] {subprocess.py:93} INFO - 23/04/12 14:31:46 INFO org.apache.spark.SparkEnv: Registering MapOutputTracker
[2023-04-12T14:31:47.732+0000] {subprocess.py:93} INFO - 23/04/12 14:31:46 INFO org.apache.spark.SparkEnv: Registering BlockManagerMaster
[2023-04-12T14:31:47.733+0000] {subprocess.py:93} INFO - 23/04/12 14:31:46 INFO org.apache.spark.SparkEnv: Registering BlockManagerMasterHeartbeat
[2023-04-12T14:31:47.733+0000] {subprocess.py:93} INFO - 23/04/12 14:31:46 INFO org.apache.spark.SparkEnv: Registering OutputCommitCoordinator
[2023-04-12T14:31:47.734+0000] {subprocess.py:93} INFO - 23/04/12 14:31:46 INFO org.sparkproject.jetty.util.log: Logging initialized @4299ms to org.sparkproject.jetty.util.log.Slf4jLog
[2023-04-12T14:31:47.734+0000] {subprocess.py:93} INFO - 23/04/12 14:31:46 INFO org.sparkproject.jetty.server.Server: jetty-9.4.40.v20210413; built: 2021-04-13T20:42:42.668Z; git: b881a572662e1943a14ae12e7e1207989f218b74; jvm 1.8.0_322-b06
[2023-04-12T14:31:47.736+0000] {subprocess.py:93} INFO - 23/04/12 14:31:46 INFO org.sparkproject.jetty.server.Server: Started @4432ms
[2023-04-12T14:31:47.737+0000] {subprocess.py:93} INFO - 23/04/12 14:31:46 INFO org.sparkproject.jetty.server.AbstractConnector: Started ServerConnector@77b58774{HTTP/1.1, (http/1.1)}{0.0.0.0:39713}
[2023-04-12T14:31:50.615+0000] {subprocess.py:93} INFO - 23/04/12 14:31:48 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageImpl: Ignoring exception of type GoogleJsonResponseException; verified object already exists with desired state.
[2023-04-12T14:31:55.681+0000] {subprocess.py:93} INFO - 23/04/12 14:31:54 WARN org.apache.spark.sql.catalyst.util.package: Truncated the string representation of a plan since it was too large. This behavior can be adjusted by setting 'spark.sql.debug.maxToStringFields'.
[2023-04-12T14:31:55.681+0000] {subprocess.py:93} INFO - Cleaning the data for the teams_df started
[2023-04-12T14:31:55.682+0000] {subprocess.py:93} INFO - Cleaning the data for the teams_df is successful!
[2023-04-12T14:32:00.520+0000] {subprocess.py:93} INFO - Loading for nfl data to parquet started
[2023-04-12T14:32:03.119+0000] {subprocess.py:93} INFO - 23/04/12 14:32:01 INFO org.apache.hadoop.io.compress.CodecPool: Got brand-new decompressor [.snappy]
[2023-04-12T14:32:03.120+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:03.121+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:03.122+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:03.123+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:03.124+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:03.125+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:03.127+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:03.128+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:03.129+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet block size to 134217728
[2023-04-12T14:32:03.130+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet page size to 1048576
[2023-04-12T14:32:03.132+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet dictionary page size to 1048576
[2023-04-12T14:32:03.133+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Dictionary is on
[2023-04-12T14:32:03.134+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Validation is off
[2023-04-12T14:32:03.136+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writer version is: PARQUET_1_0
[2023-04-12T14:32:03.137+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Maximum row group padding size is 8388608 bytes
[2023-04-12T14:32:03.139+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page size checking is: estimated
[2023-04-12T14:32:03.142+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Min row count for page size check is: 100
[2023-04-12T14:32:03.145+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Max row count for page size check is: 10000
[2023-04-12T14:32:03.147+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for column indexes is: 64
[2023-04-12T14:32:03.149+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for statistics min/max  is: 2147483647
[2023-04-12T14:32:03.151+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet block size to 134217728
[2023-04-12T14:32:03.153+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page row count limit to 20000
[2023-04-12T14:32:03.154+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet block size to 134217728
[2023-04-12T14:32:03.156+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet page size to 1048576
[2023-04-12T14:32:03.157+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet dictionary page size to 1048576
[2023-04-12T14:32:03.158+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Dictionary is on
[2023-04-12T14:32:03.159+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Validation is off
[2023-04-12T14:32:03.160+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writer version is: PARQUET_1_0
[2023-04-12T14:32:03.161+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Maximum row group padding size is 8388608 bytes
[2023-04-12T14:32:03.162+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page size checking is: estimated
[2023-04-12T14:32:03.163+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Min row count for page size check is: 100
[2023-04-12T14:32:03.164+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Max row count for page size check is: 10000
[2023-04-12T14:32:03.165+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for column indexes is: 64
[2023-04-12T14:32:03.166+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for statistics min/max  is: 2147483647
[2023-04-12T14:32:03.167+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page row count limit to 20000
[2023-04-12T14:32:03.168+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writing page checksums is: on
[2023-04-12T14:32:03.169+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet page size to 1048576
[2023-04-12T14:32:03.169+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writing page checksums is: on
[2023-04-12T14:32:03.171+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet dictionary page size to 1048576
[2023-04-12T14:32:03.173+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Dictionary is on
[2023-04-12T14:32:03.174+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Validation is off
[2023-04-12T14:32:03.175+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writer version is: PARQUET_1_0
[2023-04-12T14:32:03.176+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Maximum row group padding size is 8388608 bytes
[2023-04-12T14:32:03.177+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page size checking is: estimated
[2023-04-12T14:32:03.178+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Min row count for page size check is: 100
[2023-04-12T14:32:03.179+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Max row count for page size check is: 10000
[2023-04-12T14:32:03.180+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for column indexes is: 64
[2023-04-12T14:32:03.180+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for statistics min/max  is: 2147483647
[2023-04-12T14:32:03.181+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page row count limit to 20000
[2023-04-12T14:32:03.182+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writing page checksums is: on
[2023-04-12T14:32:03.182+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet block size to 134217728
[2023-04-12T14:32:03.183+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet page size to 1048576
[2023-04-12T14:32:03.183+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet dictionary page size to 1048576
[2023-04-12T14:32:03.184+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Dictionary is on
[2023-04-12T14:32:03.184+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Validation is off
[2023-04-12T14:32:03.185+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writer version is: PARQUET_1_0
[2023-04-12T14:32:03.186+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Maximum row group padding size is 8388608 bytes
[2023-04-12T14:32:03.187+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page size checking is: estimated
[2023-04-12T14:32:03.187+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Min row count for page size check is: 100
[2023-04-12T14:32:03.188+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Max row count for page size check is: 10000
[2023-04-12T14:32:03.190+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for column indexes is: 64
[2023-04-12T14:32:03.195+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for statistics min/max  is: 2147483647
[2023-04-12T14:32:03.196+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page row count limit to 20000
[2023-04-12T14:32:03.197+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writing page checksums is: on
[2023-04-12T14:32:03.198+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.hadoop.io.compress.CodecPool: Got brand-new compressor [.snappy]
[2023-04-12T14:32:03.199+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.hadoop.io.compress.CodecPool: Got brand-new compressor [.snappy]
[2023-04-12T14:32:03.200+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.hadoop.io.compress.CodecPool: Got brand-new compressor [.snappy]
[2023-04-12T14:32:03.201+0000] {subprocess.py:93} INFO - 23/04/12 14:32:02 INFO org.apache.hadoop.io.compress.CodecPool: Got brand-new compressor [.snappy]
[2023-04-12T14:32:03.202+0000] {subprocess.py:93} INFO - 23/04/12 14:32:03 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-7d71d32f-d003-45b1-8e95-0a513c468f59/_temporary/0/_temporary/attempt_202304121432028525502897236617213_0010_m_000001_10/' directory.
[2023-04-12T14:32:03.203+0000] {subprocess.py:93} INFO - 23/04/12 14:32:03 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-7d71d32f-d003-45b1-8e95-0a513c468f59/_temporary/0/_temporary/attempt_202304121432027942086696400627537_0010_m_000002_11/' directory.
[2023-04-12T14:32:03.203+0000] {subprocess.py:93} INFO - 23/04/12 14:32:03 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-7d71d32f-d003-45b1-8e95-0a513c468f59/_temporary/0/_temporary/attempt_202304121432025013942624746515444_0010_m_000003_12/' directory.
[2023-04-12T14:32:03.204+0000] {subprocess.py:93} INFO - 23/04/12 14:32:03 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-7d71d32f-d003-45b1-8e95-0a513c468f59/_temporary/0/_temporary/attempt_202304121432021040822782196907034_0010_m_000000_9/' directory.
[2023-04-12T14:32:03.205+0000] {subprocess.py:93} INFO - 23/04/12 14:32:03 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-7d71d32f-d003-45b1-8e95-0a513c468f59/_temporary/0/_temporary/' directory.
[2023-04-12T14:32:03.205+0000] {subprocess.py:93} INFO - 23/04/12 14:32:03 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageImpl: Ignoring exception of type GoogleJsonResponseException; verified object already exists with desired state.
[2023-04-12T14:32:03.206+0000] {subprocess.py:93} INFO - 23/04/12 14:32:03 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-7d71d32f-d003-45b1-8e95-0a513c468f59/_temporary/0/_temporary/' directory.
[2023-04-12T14:32:03.206+0000] {subprocess.py:93} INFO - 23/04/12 14:32:03 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageImpl: Ignoring exception of type GoogleJsonResponseException; verified object already exists with desired state.
[2023-04-12T14:32:03.207+0000] {subprocess.py:93} INFO - 23/04/12 14:32:03 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-7d71d32f-d003-45b1-8e95-0a513c468f59/_temporary/0/_temporary/' directory.
[2023-04-12T14:32:03.208+0000] {subprocess.py:93} INFO - 23/04/12 14:32:03 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:03.208+0000] {subprocess.py:93} INFO - 23/04/12 14:32:03 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:03.209+0000] {subprocess.py:93} INFO - 23/04/12 14:32:03 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet block size to 134217728
[2023-04-12T14:32:03.209+0000] {subprocess.py:93} INFO - 23/04/12 14:32:03 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet page size to 1048576
[2023-04-12T14:32:03.210+0000] {subprocess.py:93} INFO - 23/04/12 14:32:03 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet dictionary page size to 1048576
[2023-04-12T14:32:03.211+0000] {subprocess.py:93} INFO - 23/04/12 14:32:03 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Dictionary is on
[2023-04-12T14:32:03.211+0000] {subprocess.py:93} INFO - 23/04/12 14:32:03 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Validation is off
[2023-04-12T14:32:03.212+0000] {subprocess.py:93} INFO - 23/04/12 14:32:03 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writer version is: PARQUET_1_0
[2023-04-12T14:32:03.212+0000] {subprocess.py:93} INFO - 23/04/12 14:32:03 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Maximum row group padding size is 8388608 bytes
[2023-04-12T14:32:03.213+0000] {subprocess.py:93} INFO - 23/04/12 14:32:03 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page size checking is: estimated
[2023-04-12T14:32:03.214+0000] {subprocess.py:93} INFO - 23/04/12 14:32:03 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Min row count for page size check is: 100
[2023-04-12T14:32:03.216+0000] {subprocess.py:93} INFO - 23/04/12 14:32:03 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Max row count for page size check is: 10000
[2023-04-12T14:32:03.217+0000] {subprocess.py:93} INFO - 23/04/12 14:32:03 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for column indexes is: 64
[2023-04-12T14:32:03.218+0000] {subprocess.py:93} INFO - 23/04/12 14:32:03 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for statistics min/max  is: 2147483647
[2023-04-12T14:32:03.219+0000] {subprocess.py:93} INFO - 23/04/12 14:32:03 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page row count limit to 20000
[2023-04-12T14:32:03.220+0000] {subprocess.py:93} INFO - 23/04/12 14:32:03 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writing page checksums is: on
[2023-04-12T14:32:03.221+0000] {subprocess.py:93} INFO - 23/04/12 14:32:03 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageImpl: Ignoring exception of type GoogleJsonResponseException; verified object already exists with desired state.
[2023-04-12T14:32:03.221+0000] {subprocess.py:93} INFO - 23/04/12 14:32:03 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-7d71d32f-d003-45b1-8e95-0a513c468f59/_temporary/0/_temporary/' directory.
[2023-04-12T14:32:07.931+0000] {subprocess.py:93} INFO - 23/04/12 14:32:04 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-7d71d32f-d003-45b1-8e95-0a513c468f59/_temporary/0/_temporary/attempt_202304121432027795645164217771869_0010_m_000004_13/' directory.
[2023-04-12T14:32:07.932+0000] {subprocess.py:93} INFO - 23/04/12 14:32:04 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-7d71d32f-d003-45b1-8e95-0a513c468f59/' directory.
[2023-04-12T14:32:07.933+0000] {subprocess.py:93} INFO - 23/04/12 14:32:04 INFO com.google.cloud.bigquery.connector.common.BigQueryClient: Submitted job LoadJobConfiguration{type=LOAD, destinationTable=GenericData{classInfo=[datasetId, projectId, tableId], {datasetId=nfl_data_all, projectId=nfl-de-project, tableId=teams_2020_2}}, decimalTargetTypes=null, destinationEncryptionConfiguration=null, createDisposition=CREATE_IF_NEEDED, writeDisposition=WRITE_TRUNCATE, formatOptions=ParquetOptions{enableListInference=null, enumAsString=null}, nullMarker=null, maxBadRecords=null, schema=Schema{fields=[Field{name=location, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=name, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=displayName, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=shortDisplayName, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=isActive, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=isAllStar, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=logo, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=teamId, type=INTEGER, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}]}, ignoreUnknownValue=null, sourceUris=[gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-7d71d32f-d003-45b1-8e95-0a513c468f59/part-00004-2e3c8f1b-a62e-4751-ac4f-a65386f22527-c000.snappy.parquet, gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-7d71d32f-d003-45b1-8e95-0a513c468f59/part-00001-2e3c8f1b-a62e-4751-ac4f-a65386f22527-c000.snappy.parquet, gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-7d71d32f-d003-45b1-8e95-0a513c468f59/part-00003-2e3c8f1b-a62e-4751-ac4f-a65386f22527-c000.snappy.parquet, gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-7d71d32f-d003-45b1-8e95-0a513c468f59/part-00000-2e3c8f1b-a62e-4751-ac4f-a65386f22527-c000.snappy.parquet, gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-7d71d32f-d003-45b1-8e95-0a513c468f59/part-00002-2e3c8f1b-a62e-4751-ac4f-a65386f22527-c000.snappy.parquet], schemaUpdateOptions=null, autodetect=null, timePartitioning=null, clustering=null, useAvroLogicalTypes=null, labels=null, jobTimeoutMs=null, rangePartitioning=null, hivePartitioningOptions=null, referenceFileSchemaUri=null, connectionProperties=null, createSession=null}. jobId: JobId{project=nfl-de-project, job=82f6b13c-e6d1-4d3d-9c03-47f21312b19f, location=europe-west6}
[2023-04-12T14:32:07.934+0000] {subprocess.py:93} INFO - 23/04/12 14:32:07 INFO com.google.cloud.bigquery.connector.common.BigQueryClient: Done loading to nfl-de-project.nfl_data_all.teams_2020_2. jobId: JobId{project=nfl-de-project, job=82f6b13c-e6d1-4d3d-9c03-47f21312b19f, location=europe-west6}
[2023-04-12T14:32:10.756+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:10.757+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:10.758+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet block size to 134217728
[2023-04-12T14:32:10.760+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet page size to 1048576
[2023-04-12T14:32:10.761+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet dictionary page size to 1048576
[2023-04-12T14:32:10.762+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Dictionary is on
[2023-04-12T14:32:10.763+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Validation is off
[2023-04-12T14:32:10.764+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writer version is: PARQUET_1_0
[2023-04-12T14:32:10.766+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Maximum row group padding size is 8388608 bytes
[2023-04-12T14:32:10.767+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page size checking is: estimated
[2023-04-12T14:32:10.769+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Min row count for page size check is: 100
[2023-04-12T14:32:10.770+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Max row count for page size check is: 10000
[2023-04-12T14:32:10.771+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for column indexes is: 64
[2023-04-12T14:32:10.772+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for statistics min/max  is: 2147483647
[2023-04-12T14:32:10.773+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page row count limit to 20000
[2023-04-12T14:32:10.774+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writing page checksums is: on
[2023-04-12T14:32:10.775+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:10.776+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:10.778+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet block size to 134217728
[2023-04-12T14:32:10.778+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet page size to 1048576
[2023-04-12T14:32:10.779+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet dictionary page size to 1048576
[2023-04-12T14:32:10.781+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Dictionary is on
[2023-04-12T14:32:10.782+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Validation is off
[2023-04-12T14:32:10.784+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writer version is: PARQUET_1_0
[2023-04-12T14:32:10.786+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Maximum row group padding size is 8388608 bytes
[2023-04-12T14:32:10.787+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page size checking is: estimated
[2023-04-12T14:32:10.788+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Min row count for page size check is: 100
[2023-04-12T14:32:10.789+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Max row count for page size check is: 10000
[2023-04-12T14:32:10.790+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for column indexes is: 64
[2023-04-12T14:32:10.791+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:10.792+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:10.793+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet block size to 134217728
[2023-04-12T14:32:10.794+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet page size to 1048576
[2023-04-12T14:32:10.795+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet dictionary page size to 1048576
[2023-04-12T14:32:10.795+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Dictionary is on
[2023-04-12T14:32:10.796+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Validation is off
[2023-04-12T14:32:10.797+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writer version is: PARQUET_1_0
[2023-04-12T14:32:10.798+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Maximum row group padding size is 8388608 bytes
[2023-04-12T14:32:10.799+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page size checking is: estimated
[2023-04-12T14:32:10.800+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Min row count for page size check is: 100
[2023-04-12T14:32:10.801+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Max row count for page size check is: 10000
[2023-04-12T14:32:10.802+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for column indexes is: 64
[2023-04-12T14:32:10.803+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for statistics min/max  is: 2147483647
[2023-04-12T14:32:10.804+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page row count limit to 20000
[2023-04-12T14:32:10.805+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writing page checksums is: on
[2023-04-12T14:32:10.806+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:10.807+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:10.808+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for statistics min/max  is: 2147483647
[2023-04-12T14:32:10.809+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page row count limit to 20000
[2023-04-12T14:32:10.810+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writing page checksums is: on
[2023-04-12T14:32:10.811+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet block size to 134217728
[2023-04-12T14:32:10.812+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet page size to 1048576
[2023-04-12T14:32:10.813+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet dictionary page size to 1048576
[2023-04-12T14:32:10.814+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Dictionary is on
[2023-04-12T14:32:10.815+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Validation is off
[2023-04-12T14:32:10.816+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writer version is: PARQUET_1_0
[2023-04-12T14:32:10.816+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Maximum row group padding size is 8388608 bytes
[2023-04-12T14:32:10.817+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page size checking is: estimated
[2023-04-12T14:32:10.817+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Min row count for page size check is: 100
[2023-04-12T14:32:10.818+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Max row count for page size check is: 10000
[2023-04-12T14:32:10.818+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for column indexes is: 64
[2023-04-12T14:32:10.819+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for statistics min/max  is: 2147483647
[2023-04-12T14:32:10.820+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page row count limit to 20000
[2023-04-12T14:32:10.821+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writing page checksums is: on
[2023-04-12T14:32:10.821+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-8b690aaa-bf29-4b8c-9e40-0b4bbd6a18b4/_temporary/0/_temporary/attempt_20230412143209164393456946211938_0014_m_000000_16/' directory.
[2023-04-12T14:32:10.822+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-8b690aaa-bf29-4b8c-9e40-0b4bbd6a18b4/_temporary/0/_temporary/attempt_202304121432095414459232372814736_0014_m_000003_19/' directory.
[2023-04-12T14:32:10.823+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-8b690aaa-bf29-4b8c-9e40-0b4bbd6a18b4/_temporary/0/_temporary/attempt_202304121432096608776065489188494_0014_m_000002_18/' directory.
[2023-04-12T14:32:10.824+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-8b690aaa-bf29-4b8c-9e40-0b4bbd6a18b4/_temporary/0/_temporary/attempt_202304121432098216626371714134854_0014_m_000001_17/' directory.
[2023-04-12T14:32:10.825+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-8b690aaa-bf29-4b8c-9e40-0b4bbd6a18b4/_temporary/0/_temporary/' directory.
[2023-04-12T14:32:10.826+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageImpl: Ignoring exception of type GoogleJsonResponseException; verified object already exists with desired state.
[2023-04-12T14:32:10.827+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-8b690aaa-bf29-4b8c-9e40-0b4bbd6a18b4/_temporary/0/_temporary/' directory.
[2023-04-12T14:32:10.828+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:10.829+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:10.829+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet block size to 134217728
[2023-04-12T14:32:10.830+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet page size to 1048576
[2023-04-12T14:32:10.831+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet dictionary page size to 1048576
[2023-04-12T14:32:10.832+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Dictionary is on
[2023-04-12T14:32:10.833+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Validation is off
[2023-04-12T14:32:10.834+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writer version is: PARQUET_1_0
[2023-04-12T14:32:10.834+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Maximum row group padding size is 8388608 bytes
[2023-04-12T14:32:10.835+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page size checking is: estimated
[2023-04-12T14:32:10.836+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Min row count for page size check is: 100
[2023-04-12T14:32:10.837+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Max row count for page size check is: 10000
[2023-04-12T14:32:10.838+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for column indexes is: 64
[2023-04-12T14:32:10.840+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for statistics min/max  is: 2147483647
[2023-04-12T14:32:10.841+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page row count limit to 20000
[2023-04-12T14:32:10.842+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writing page checksums is: on
[2023-04-12T14:32:10.844+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageImpl: Ignoring exception of type GoogleJsonResponseException; verified object already exists with desired state.
[2023-04-12T14:32:10.845+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-8b690aaa-bf29-4b8c-9e40-0b4bbd6a18b4/_temporary/0/_temporary/' directory.
[2023-04-12T14:32:10.846+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageImpl: Ignoring exception of type GoogleJsonResponseException; verified object already exists with desired state.
[2023-04-12T14:32:10.848+0000] {subprocess.py:93} INFO - 23/04/12 14:32:09 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-8b690aaa-bf29-4b8c-9e40-0b4bbd6a18b4/_temporary/0/_temporary/' directory.
[2023-04-12T14:32:10.849+0000] {subprocess.py:93} INFO - 23/04/12 14:32:10 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-8b690aaa-bf29-4b8c-9e40-0b4bbd6a18b4/_temporary/0/_temporary/attempt_202304121432094522325885653180649_0014_m_000004_20/' directory.
[2023-04-12T14:32:10.850+0000] {subprocess.py:93} INFO - 23/04/12 14:32:10 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-8b690aaa-bf29-4b8c-9e40-0b4bbd6a18b4/' directory.
[2023-04-12T14:32:10.851+0000] {subprocess.py:93} INFO - 23/04/12 14:32:10 INFO com.google.cloud.bigquery.connector.common.BigQueryClient: Submitted job LoadJobConfiguration{type=LOAD, destinationTable=GenericData{classInfo=[datasetId, projectId, tableId], {datasetId=nfl_data_all, projectId=nfl-de-project, tableId=teams_stats_2020_2}}, decimalTargetTypes=null, destinationEncryptionConfiguration=null, createDisposition=CREATE_IF_NEEDED, writeDisposition=WRITE_TRUNCATE, formatOptions=ParquetOptions{enableListInference=null, enumAsString=null}, nullMarker=null, maxBadRecords=null, schema=Schema{fields=[Field{name=name, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=description, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=abbreviation, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=value, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=rank, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=perGameValue, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=category, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=teamId, type=INTEGER, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=year, type=STRING, mode=REQUIRED, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=seasonType, type=STRING, mode=REQUIRED, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}]}, ignoreUnknownValue=null, sourceUris=[gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-8b690aaa-bf29-4b8c-9e40-0b4bbd6a18b4/part-00001-1f5fbb24-255a-4540-ac46-c3af2213ac9a-c000.snappy.parquet, gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-8b690aaa-bf29-4b8c-9e40-0b4bbd6a18b4/part-00000-1f5fbb24-255a-4540-ac46-c3af2213ac9a-c000.snappy.parquet, gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-8b690aaa-bf29-4b8c-9e40-0b4bbd6a18b4/part-00002-1f5fbb24-255a-4540-ac46-c3af2213ac9a-c000.snappy.parquet, gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-8b690aaa-bf29-4b8c-9e40-0b4bbd6a18b4/part-00004-1f5fbb24-255a-4540-ac46-c3af2213ac9a-c000.snappy.parquet, gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-8b690aaa-bf29-4b8c-9e40-0b4bbd6a18b4/part-00003-1f5fbb24-255a-4540-ac46-c3af2213ac9a-c000.snappy.parquet], schemaUpdateOptions=null, autodetect=null, timePartitioning=null, clustering=null, useAvroLogicalTypes=null, labels=null, jobTimeoutMs=null, rangePartitioning=null, hivePartitioningOptions=null, referenceFileSchemaUri=null, connectionProperties=null, createSession=null}. jobId: JobId{project=nfl-de-project, job=84858993-2be1-4fb3-92b9-0c3493d7d995, location=europe-west6}
[2023-04-12T14:32:13.979+0000] {subprocess.py:93} INFO - 23/04/12 14:32:12 INFO com.google.cloud.bigquery.connector.common.BigQueryClient: Done loading to nfl-de-project.nfl_data_all.teams_stats_2020_2. jobId: JobId{project=nfl-de-project, job=84858993-2be1-4fb3-92b9-0c3493d7d995, location=europe-west6}
[2023-04-12T14:32:18.653+0000] {subprocess.py:93} INFO - 23/04/12 14:32:15 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:18.653+0000] {subprocess.py:93} INFO - 23/04/12 14:32:15 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:18.654+0000] {subprocess.py:93} INFO - 23/04/12 14:32:15 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet block size to 134217728
[2023-04-12T14:32:18.654+0000] {subprocess.py:93} INFO - 23/04/12 14:32:15 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet page size to 1048576
[2023-04-12T14:32:18.655+0000] {subprocess.py:93} INFO - 23/04/12 14:32:15 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet dictionary page size to 1048576
[2023-04-12T14:32:18.655+0000] {subprocess.py:93} INFO - 23/04/12 14:32:15 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Dictionary is on
[2023-04-12T14:32:18.656+0000] {subprocess.py:93} INFO - 23/04/12 14:32:15 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Validation is off
[2023-04-12T14:32:18.656+0000] {subprocess.py:93} INFO - 23/04/12 14:32:15 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writer version is: PARQUET_1_0
[2023-04-12T14:32:18.656+0000] {subprocess.py:93} INFO - 23/04/12 14:32:15 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Maximum row group padding size is 8388608 bytes
[2023-04-12T14:32:18.657+0000] {subprocess.py:93} INFO - 23/04/12 14:32:15 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page size checking is: estimated
[2023-04-12T14:32:18.658+0000] {subprocess.py:93} INFO - 23/04/12 14:32:15 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Min row count for page size check is: 100
[2023-04-12T14:32:18.658+0000] {subprocess.py:93} INFO - 23/04/12 14:32:15 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Max row count for page size check is: 10000
[2023-04-12T14:32:18.659+0000] {subprocess.py:93} INFO - 23/04/12 14:32:15 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for column indexes is: 64
[2023-04-12T14:32:18.660+0000] {subprocess.py:93} INFO - 23/04/12 14:32:15 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for statistics min/max  is: 2147483647
[2023-04-12T14:32:18.660+0000] {subprocess.py:93} INFO - 23/04/12 14:32:15 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page row count limit to 20000
[2023-04-12T14:32:18.661+0000] {subprocess.py:93} INFO - 23/04/12 14:32:15 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writing page checksums is: on
[2023-04-12T14:32:18.661+0000] {subprocess.py:93} INFO - 23/04/12 14:32:16 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-72524024-4c3f-4a2e-898a-d971466067ff/_temporary/0/_temporary/attempt_202304121432132548960887007642248_0016_m_000000_22/' directory.
[2023-04-12T14:32:18.662+0000] {subprocess.py:93} INFO - 23/04/12 14:32:16 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-72524024-4c3f-4a2e-898a-d971466067ff/_temporary/0/_temporary/' directory.
[2023-04-12T14:32:18.662+0000] {subprocess.py:93} INFO - 23/04/12 14:32:16 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-72524024-4c3f-4a2e-898a-d971466067ff/' directory.
[2023-04-12T14:32:18.663+0000] {subprocess.py:93} INFO - 23/04/12 14:32:16 INFO com.google.cloud.bigquery.connector.common.BigQueryClient: Submitted job LoadJobConfiguration{type=LOAD, destinationTable=GenericData{classInfo=[datasetId, projectId, tableId], {datasetId=nfl_data_all, projectId=nfl-de-project, tableId=athletes_2020_2}}, decimalTargetTypes=null, destinationEncryptionConfiguration=null, createDisposition=CREATE_IF_NEEDED, writeDisposition=WRITE_TRUNCATE, formatOptions=ParquetOptions{enableListInference=null, enumAsString=null}, nullMarker=null, maxBadRecords=null, schema=Schema{fields=[Field{name=athleteId, type=INTEGER, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=firstName, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=lastName, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=fullName, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=shortName, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=weight_lbs, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=height_inches, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=displayHeight, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=age, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=dateOfBirth, type=DATE, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=debutYear, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=birthPlaceCity, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=birthPlaceState, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=birthPlaceCountry, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=positionId, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=positionName, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=experienceYears, type=INTEGER, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=statusName, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=teamId, type=INTEGER, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=headshot, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=year, type=INTEGER, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=seasonType, type=INTEGER, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=positionParent, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}]}, ignoreUnknownValue=null, sourceUris=[gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-72524024-4c3f-4a2e-898a-d971466067ff/part-00000-38cdc3a0-dabf-4230-9ff3-3e31f2f939b2-c000.snappy.parquet], schemaUpdateOptions=null, autodetect=null, timePartitioning=null, clustering=null, useAvroLogicalTypes=null, labels=null, jobTimeoutMs=null, rangePartitioning=null, hivePartitioningOptions=null, referenceFileSchemaUri=null, connectionProperties=null, createSession=null}. jobId: JobId{project=nfl-de-project, job=2e3e6128-13fa-4815-8cb3-2134520e8f58, location=europe-west6}
[2023-04-12T14:32:21.454+0000] {subprocess.py:93} INFO - 23/04/12 14:32:19 INFO com.google.cloud.bigquery.connector.common.BigQueryClient: Done loading to nfl-de-project.nfl_data_all.athletes_2020_2. jobId: JobId{project=nfl-de-project, job=2e3e6128-13fa-4815-8cb3-2134520e8f58, location=europe-west6}
[2023-04-12T14:32:24.295+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:24.296+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:24.296+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet block size to 134217728
[2023-04-12T14:32:24.297+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet page size to 1048576
[2023-04-12T14:32:24.298+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet dictionary page size to 1048576
[2023-04-12T14:32:24.299+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Dictionary is on
[2023-04-12T14:32:24.300+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Validation is off
[2023-04-12T14:32:24.301+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writer version is: PARQUET_1_0
[2023-04-12T14:32:24.302+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Maximum row group padding size is 8388608 bytes
[2023-04-12T14:32:24.303+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page size checking is: estimated
[2023-04-12T14:32:24.303+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Min row count for page size check is: 100
[2023-04-12T14:32:24.304+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Max row count for page size check is: 10000
[2023-04-12T14:32:24.304+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for column indexes is: 64
[2023-04-12T14:32:24.305+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for statistics min/max  is: 2147483647
[2023-04-12T14:32:24.305+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page row count limit to 20000
[2023-04-12T14:32:24.306+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writing page checksums is: on
[2023-04-12T14:32:24.307+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:24.307+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:24.308+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet block size to 134217728
[2023-04-12T14:32:24.309+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet page size to 1048576
[2023-04-12T14:32:24.311+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet dictionary page size to 1048576
[2023-04-12T14:32:24.312+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Dictionary is on
[2023-04-12T14:32:24.313+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Validation is off
[2023-04-12T14:32:24.314+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writer version is: PARQUET_1_0
[2023-04-12T14:32:24.315+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Maximum row group padding size is 8388608 bytes
[2023-04-12T14:32:24.316+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page size checking is: estimated
[2023-04-12T14:32:24.316+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Min row count for page size check is: 100
[2023-04-12T14:32:24.317+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Max row count for page size check is: 10000
[2023-04-12T14:32:24.317+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for column indexes is: 64
[2023-04-12T14:32:24.318+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for statistics min/max  is: 2147483647
[2023-04-12T14:32:24.319+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page row count limit to 20000
[2023-04-12T14:32:24.320+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writing page checksums is: on
[2023-04-12T14:32:24.321+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:24.322+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:24.323+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet block size to 134217728
[2023-04-12T14:32:24.324+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet page size to 1048576
[2023-04-12T14:32:24.325+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet dictionary page size to 1048576
[2023-04-12T14:32:24.326+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Dictionary is on
[2023-04-12T14:32:24.326+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Validation is off
[2023-04-12T14:32:24.327+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writer version is: PARQUET_1_0
[2023-04-12T14:32:24.328+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Maximum row group padding size is 8388608 bytes
[2023-04-12T14:32:24.329+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page size checking is: estimated
[2023-04-12T14:32:24.329+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Min row count for page size check is: 100
[2023-04-12T14:32:24.330+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Max row count for page size check is: 10000
[2023-04-12T14:32:24.330+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for column indexes is: 64
[2023-04-12T14:32:24.331+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for statistics min/max  is: 2147483647
[2023-04-12T14:32:24.332+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page row count limit to 20000
[2023-04-12T14:32:24.333+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writing page checksums is: on
[2023-04-12T14:32:24.334+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:24.335+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:24.335+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet block size to 134217728
[2023-04-12T14:32:24.336+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet page size to 1048576
[2023-04-12T14:32:24.336+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet dictionary page size to 1048576
[2023-04-12T14:32:24.337+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Dictionary is on
[2023-04-12T14:32:24.337+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Validation is off
[2023-04-12T14:32:24.338+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writer version is: PARQUET_1_0
[2023-04-12T14:32:24.339+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Maximum row group padding size is 8388608 bytes
[2023-04-12T14:32:24.339+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page size checking is: estimated
[2023-04-12T14:32:24.340+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Min row count for page size check is: 100
[2023-04-12T14:32:24.342+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Max row count for page size check is: 10000
[2023-04-12T14:32:24.342+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for column indexes is: 64
[2023-04-12T14:32:24.343+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for statistics min/max  is: 2147483647
[2023-04-12T14:32:24.343+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page row count limit to 20000
[2023-04-12T14:32:24.344+0000] {subprocess.py:93} INFO - 23/04/12 14:32:22 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writing page checksums is: on
[2023-04-12T14:32:24.344+0000] {subprocess.py:93} INFO - 23/04/12 14:32:24 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-ca1b0d25-dc1a-4297-9d47-08a3d2a9111b/_temporary/0/_temporary/attempt_202304121432224670336337805108312_0020_m_000000_26/' directory.
[2023-04-12T14:32:24.345+0000] {subprocess.py:93} INFO - 23/04/12 14:32:24 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-ca1b0d25-dc1a-4297-9d47-08a3d2a9111b/_temporary/0/_temporary/' directory.
[2023-04-12T14:32:24.345+0000] {subprocess.py:93} INFO - 23/04/12 14:32:24 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:24.346+0000] {subprocess.py:93} INFO - 23/04/12 14:32:24 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:24.347+0000] {subprocess.py:93} INFO - 23/04/12 14:32:24 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet block size to 134217728
[2023-04-12T14:32:24.348+0000] {subprocess.py:93} INFO - 23/04/12 14:32:24 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet page size to 1048576
[2023-04-12T14:32:24.349+0000] {subprocess.py:93} INFO - 23/04/12 14:32:24 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet dictionary page size to 1048576
[2023-04-12T14:32:24.350+0000] {subprocess.py:93} INFO - 23/04/12 14:32:24 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Dictionary is on
[2023-04-12T14:32:24.351+0000] {subprocess.py:93} INFO - 23/04/12 14:32:24 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Validation is off
[2023-04-12T14:32:24.351+0000] {subprocess.py:93} INFO - 23/04/12 14:32:24 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writer version is: PARQUET_1_0
[2023-04-12T14:32:24.352+0000] {subprocess.py:93} INFO - 23/04/12 14:32:24 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Maximum row group padding size is 8388608 bytes
[2023-04-12T14:32:24.352+0000] {subprocess.py:93} INFO - 23/04/12 14:32:24 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page size checking is: estimated
[2023-04-12T14:32:24.353+0000] {subprocess.py:93} INFO - 23/04/12 14:32:24 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Min row count for page size check is: 100
[2023-04-12T14:32:24.354+0000] {subprocess.py:93} INFO - 23/04/12 14:32:24 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Max row count for page size check is: 10000
[2023-04-12T14:32:24.355+0000] {subprocess.py:93} INFO - 23/04/12 14:32:24 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for column indexes is: 64
[2023-04-12T14:32:24.356+0000] {subprocess.py:93} INFO - 23/04/12 14:32:24 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for statistics min/max  is: 2147483647
[2023-04-12T14:32:24.356+0000] {subprocess.py:93} INFO - 23/04/12 14:32:24 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page row count limit to 20000
[2023-04-12T14:32:24.357+0000] {subprocess.py:93} INFO - 23/04/12 14:32:24 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writing page checksums is: on
[2023-04-12T14:32:24.357+0000] {subprocess.py:93} INFO - 23/04/12 14:32:24 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-ca1b0d25-dc1a-4297-9d47-08a3d2a9111b/_temporary/0/_temporary/attempt_202304121432227795583440097462012_0020_m_000003_29/' directory.
[2023-04-12T14:32:24.358+0000] {subprocess.py:93} INFO - 23/04/12 14:32:24 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-ca1b0d25-dc1a-4297-9d47-08a3d2a9111b/_temporary/0/_temporary/attempt_202304121432224125918249396960565_0020_m_000002_28/' directory.
[2023-04-12T14:32:24.358+0000] {subprocess.py:93} INFO - 23/04/12 14:32:24 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-ca1b0d25-dc1a-4297-9d47-08a3d2a9111b/_temporary/0/_temporary/attempt_202304121432226720209395663961521_0020_m_000001_27/' directory.
[2023-04-12T14:32:29.003+0000] {subprocess.py:93} INFO - 23/04/12 14:32:24 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-ca1b0d25-dc1a-4297-9d47-08a3d2a9111b/_temporary/0/_temporary/attempt_202304121432225621044647265742144_0020_m_000004_30/' directory.
[2023-04-12T14:32:29.004+0000] {subprocess.py:93} INFO - 23/04/12 14:32:24 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-ca1b0d25-dc1a-4297-9d47-08a3d2a9111b/' directory.
[2023-04-12T14:32:29.005+0000] {subprocess.py:93} INFO - 23/04/12 14:32:25 INFO com.google.cloud.bigquery.connector.common.BigQueryClient: Submitted job LoadJobConfiguration{type=LOAD, destinationTable=GenericData{classInfo=[datasetId, projectId, tableId], {datasetId=nfl_data_all, projectId=nfl-de-project, tableId=athletes_stats_2020_2}}, decimalTargetTypes=null, destinationEncryptionConfiguration=null, createDisposition=CREATE_IF_NEEDED, writeDisposition=WRITE_TRUNCATE, formatOptions=ParquetOptions{enableListInference=null, enumAsString=null}, nullMarker=null, maxBadRecords=null, schema=Schema{fields=[Field{name=name, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=displayName, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=shortDisplayName, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=description, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=abbreviation, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=value, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=displayValue, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=perGameValue, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=category, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=athleteId, type=INTEGER, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=rank, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=year, type=STRING, mode=REQUIRED, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=seasonType, type=STRING, mode=REQUIRED, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}]}, ignoreUnknownValue=null, sourceUris=[gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-ca1b0d25-dc1a-4297-9d47-08a3d2a9111b/part-00002-84aa5f3e-d3d3-4683-bf8c-fb80b24fa9b0-c000.snappy.parquet, gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-ca1b0d25-dc1a-4297-9d47-08a3d2a9111b/part-00003-84aa5f3e-d3d3-4683-bf8c-fb80b24fa9b0-c000.snappy.parquet, gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-ca1b0d25-dc1a-4297-9d47-08a3d2a9111b/part-00000-84aa5f3e-d3d3-4683-bf8c-fb80b24fa9b0-c000.snappy.parquet, gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-ca1b0d25-dc1a-4297-9d47-08a3d2a9111b/part-00001-84aa5f3e-d3d3-4683-bf8c-fb80b24fa9b0-c000.snappy.parquet, gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-ca1b0d25-dc1a-4297-9d47-08a3d2a9111b/part-00004-84aa5f3e-d3d3-4683-bf8c-fb80b24fa9b0-c000.snappy.parquet], schemaUpdateOptions=null, autodetect=null, timePartitioning=null, clustering=null, useAvroLogicalTypes=null, labels=null, jobTimeoutMs=null, rangePartitioning=null, hivePartitioningOptions=null, referenceFileSchemaUri=null, connectionProperties=null, createSession=null}. jobId: JobId{project=nfl-de-project, job=246ceed0-9b13-4895-9d5e-74c09441a274, location=europe-west6}
[2023-04-12T14:32:29.005+0000] {subprocess.py:93} INFO - 23/04/12 14:32:28 INFO com.google.cloud.bigquery.connector.common.BigQueryClient: Done loading to nfl-de-project.nfl_data_all.athletes_stats_2020_2. jobId: JobId{project=nfl-de-project, job=246ceed0-9b13-4895-9d5e-74c09441a274, location=europe-west6}
[2023-04-12T14:32:29.006+0000] {subprocess.py:93} INFO - 23/04/12 14:32:28 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:29.006+0000] {subprocess.py:93} INFO - 23/04/12 14:32:28 INFO org.apache.parquet.hadoop.codec.CodecConfig: Compression: SNAPPY
[2023-04-12T14:32:29.007+0000] {subprocess.py:93} INFO - 23/04/12 14:32:28 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet block size to 134217728
[2023-04-12T14:32:29.007+0000] {subprocess.py:93} INFO - 23/04/12 14:32:28 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet page size to 1048576
[2023-04-12T14:32:29.008+0000] {subprocess.py:93} INFO - 23/04/12 14:32:28 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Parquet dictionary page size to 1048576
[2023-04-12T14:32:29.009+0000] {subprocess.py:93} INFO - 23/04/12 14:32:28 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Dictionary is on
[2023-04-12T14:32:29.009+0000] {subprocess.py:93} INFO - 23/04/12 14:32:28 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Validation is off
[2023-04-12T14:32:29.010+0000] {subprocess.py:93} INFO - 23/04/12 14:32:28 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writer version is: PARQUET_1_0
[2023-04-12T14:32:29.010+0000] {subprocess.py:93} INFO - 23/04/12 14:32:28 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Maximum row group padding size is 8388608 bytes
[2023-04-12T14:32:29.011+0000] {subprocess.py:93} INFO - 23/04/12 14:32:28 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page size checking is: estimated
[2023-04-12T14:32:29.012+0000] {subprocess.py:93} INFO - 23/04/12 14:32:28 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Min row count for page size check is: 100
[2023-04-12T14:32:29.012+0000] {subprocess.py:93} INFO - 23/04/12 14:32:28 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Max row count for page size check is: 10000
[2023-04-12T14:32:29.013+0000] {subprocess.py:93} INFO - 23/04/12 14:32:28 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for column indexes is: 64
[2023-04-12T14:32:29.014+0000] {subprocess.py:93} INFO - 23/04/12 14:32:28 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Truncate length for statistics min/max  is: 2147483647
[2023-04-12T14:32:29.014+0000] {subprocess.py:93} INFO - 23/04/12 14:32:28 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Page row count limit to 20000
[2023-04-12T14:32:29.015+0000] {subprocess.py:93} INFO - 23/04/12 14:32:28 INFO org.apache.parquet.hadoop.ParquetOutputFormat: Writing page checksums is: on
[2023-04-12T14:32:29.015+0000] {subprocess.py:93} INFO - 23/04/12 14:32:29 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-3db0c6c7-4f7f-4b2d-83d4-5a6d4b276e4b/_temporary/0/_temporary/attempt_202304121432286412887452244698909_0021_m_000000_31/' directory.
[2023-04-12T14:32:29.015+0000] {subprocess.py:93} INFO - 23/04/12 14:32:29 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-3db0c6c7-4f7f-4b2d-83d4-5a6d4b276e4b/_temporary/0/_temporary/' directory.
[2023-04-12T14:32:29.016+0000] {subprocess.py:93} INFO - 23/04/12 14:32:29 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-3db0c6c7-4f7f-4b2d-83d4-5a6d4b276e4b/' directory.
[2023-04-12T14:32:31.899+0000] {subprocess.py:93} INFO - 23/04/12 14:32:29 INFO com.google.cloud.bigquery.connector.common.BigQueryClient: Submitted job LoadJobConfiguration{type=LOAD, destinationTable=GenericData{classInfo=[datasetId, projectId, tableId], {datasetId=nfl_data_all, projectId=nfl-de-project, tableId=leaders_2020_2}}, decimalTargetTypes=null, destinationEncryptionConfiguration=null, createDisposition=CREATE_IF_NEEDED, writeDisposition=WRITE_TRUNCATE, formatOptions=ParquetOptions{enableListInference=null, enumAsString=null}, nullMarker=null, maxBadRecords=null, schema=Schema{fields=[Field{name=displayValue, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=value, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=name, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=shortDisplayName, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=athleteId, type=STRING, mode=NULLABLE, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=year, type=STRING, mode=REQUIRED, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}, Field{name=seasonType, type=STRING, mode=REQUIRED, description=null, policyTags=null, maxLength=null, scale=null, precision=null, defaultValueExpression=null, collation=null}]}, ignoreUnknownValue=null, sourceUris=[gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-3db0c6c7-4f7f-4b2d-83d4-5a6d4b276e4b/part-00000-d6d1c0cf-0e22-4db5-9e4d-023005a9ac66-c000.snappy.parquet], schemaUpdateOptions=null, autodetect=null, timePartitioning=null, clustering=null, useAvroLogicalTypes=null, labels=null, jobTimeoutMs=null, rangePartitioning=null, hivePartitioningOptions=null, referenceFileSchemaUri=null, connectionProperties=null, createSession=null}. jobId: JobId{project=nfl-de-project, job=bfa64f74-804c-411e-abfe-da0a74251fa5, location=europe-west6}
[2023-04-12T14:32:33.817+0000] {subprocess.py:93} INFO - 23/04/12 14:32:31 INFO com.google.cloud.bigquery.connector.common.BigQueryClient: Done loading to nfl-de-project.nfl_data_all.leaders_2020_2. jobId: JobId{project=nfl-de-project, job=bfa64f74-804c-411e-abfe-da0a74251fa5, location=europe-west6}
[2023-04-12T14:32:33.818+0000] {subprocess.py:93} INFO - 23/04/12 14:32:31 ERROR org.apache.spark.sql.execution.datasources.FileFormatWriter: Aborting job 4612176a-cf33-4faf-b2d5-c3bf0dcf414c.
[2023-04-12T14:32:33.819+0000] {subprocess.py:93} INFO - org.apache.spark.sql.AnalysisException: Attribute name "('Unnamed: 0_level_0', 'GP')" contains invalid character(s) among " ,;{}()\n\t=". Please use alias to rename it.
[2023-04-12T14:32:33.820+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.datasources.parquet.ParquetSchemaConverter$.checkConversionRequirement(ParquetSchemaConverter.scala:579)
[2023-04-12T14:32:33.820+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.datasources.parquet.ParquetSchemaConverter$.checkFieldName(ParquetSchemaConverter.scala:570)
[2023-04-12T14:32:33.821+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport$.$anonfun$setSchema$2(ParquetWriteSupport.scala:485)
[2023-04-12T14:32:33.822+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport$.$anonfun$setSchema$2$adapted(ParquetWriteSupport.scala:485)
[2023-04-12T14:32:33.823+0000] {subprocess.py:93} INFO - 	at scala.collection.immutable.List.foreach(List.scala:431)
[2023-04-12T14:32:33.824+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport$.setSchema(ParquetWriteSupport.scala:485)
[2023-04-12T14:32:33.825+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.datasources.parquet.ParquetFileFormat.buildReaderWithPartitionValues(ParquetFileFormat.scala:220)
[2023-04-12T14:32:33.827+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.FileSourceScanExec.inputRDD$lzycompute(DataSourceScanExec.scala:407)
[2023-04-12T14:32:33.828+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.FileSourceScanExec.inputRDD(DataSourceScanExec.scala:398)
[2023-04-12T14:32:33.829+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.FileSourceScanExec.doExecuteColumnar(DataSourceScanExec.scala:497)
[2023-04-12T14:32:33.831+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$executeColumnar$1(SparkPlan.scala:207)
[2023-04-12T14:32:33.832+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$executeQuery$1(SparkPlan.scala:218)
[2023-04-12T14:32:33.833+0000] {subprocess.py:93} INFO - 	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
[2023-04-12T14:32:33.833+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:215)
[2023-04-12T14:32:33.834+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.executeColumnar(SparkPlan.scala:203)
[2023-04-12T14:32:33.835+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.InputAdapter.doExecuteColumnar(WholeStageCodegenExec.scala:519)
[2023-04-12T14:32:33.836+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$executeColumnar$1(SparkPlan.scala:207)
[2023-04-12T14:32:33.836+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$executeQuery$1(SparkPlan.scala:218)
[2023-04-12T14:32:33.837+0000] {subprocess.py:93} INFO - 	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
[2023-04-12T14:32:33.838+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:215)
[2023-04-12T14:32:33.839+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.executeColumnar(SparkPlan.scala:203)
[2023-04-12T14:32:33.840+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.ColumnarToRowExec.inputRDDs(Columnar.scala:202)
[2023-04-12T14:32:33.841+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.WholeStageCodegenExec.doExecute(WholeStageCodegenExec.scala:746)
[2023-04-12T14:32:33.842+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$execute$1(SparkPlan.scala:180)
[2023-04-12T14:32:33.843+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$executeQuery$1(SparkPlan.scala:218)
[2023-04-12T14:32:33.844+0000] {subprocess.py:93} INFO - 	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
[2023-04-12T14:32:33.845+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:215)
[2023-04-12T14:32:33.845+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:176)
[2023-04-12T14:32:33.846+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.columnar.CachedRDDBuilder.buildBuffers(InMemoryRelation.scala:252)
[2023-04-12T14:32:33.847+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.columnar.CachedRDDBuilder.cachedColumnBuffers(InMemoryRelation.scala:221)
[2023-04-12T14:32:33.848+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.columnar.InMemoryTableScanExec.filteredCachedBatches(InMemoryTableScanExec.scala:144)
[2023-04-12T14:32:33.849+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.columnar.InMemoryTableScanExec.inputRDD$lzycompute(InMemoryTableScanExec.scala:95)
[2023-04-12T14:32:33.849+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.columnar.InMemoryTableScanExec.inputRDD(InMemoryTableScanExec.scala:81)
[2023-04-12T14:32:33.850+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.columnar.InMemoryTableScanExec.doExecute(InMemoryTableScanExec.scala:155)
[2023-04-12T14:32:33.851+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$execute$1(SparkPlan.scala:180)
[2023-04-12T14:32:33.851+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$executeQuery$1(SparkPlan.scala:218)
[2023-04-12T14:32:33.852+0000] {subprocess.py:93} INFO - 	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
[2023-04-12T14:32:33.853+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:215)
[2023-04-12T14:32:33.853+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:176)
[2023-04-12T14:32:33.854+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.InputAdapter.inputRDD(WholeStageCodegenExec.scala:525)
[2023-04-12T14:32:33.855+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.InputRDDCodegen.inputRDDs(WholeStageCodegenExec.scala:453)
[2023-04-12T14:32:33.855+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.InputRDDCodegen.inputRDDs$(WholeStageCodegenExec.scala:452)
[2023-04-12T14:32:33.856+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.InputAdapter.inputRDDs(WholeStageCodegenExec.scala:496)
[2023-04-12T14:32:33.856+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.ProjectExec.inputRDDs(basicPhysicalOperators.scala:50)
[2023-04-12T14:32:33.857+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.WholeStageCodegenExec.doExecute(WholeStageCodegenExec.scala:746)
[2023-04-12T14:32:33.858+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$execute$1(SparkPlan.scala:180)
[2023-04-12T14:32:33.859+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$executeQuery$1(SparkPlan.scala:218)
[2023-04-12T14:32:33.859+0000] {subprocess.py:93} INFO - 	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
[2023-04-12T14:32:33.860+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:215)
[2023-04-12T14:32:33.860+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:176)
[2023-04-12T14:32:33.861+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.GenerateExec.doExecute(GenerateExec.scala:80)
[2023-04-12T14:32:33.862+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$execute$1(SparkPlan.scala:180)
[2023-04-12T14:32:33.862+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$executeQuery$1(SparkPlan.scala:218)
[2023-04-12T14:32:33.863+0000] {subprocess.py:93} INFO - 	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
[2023-04-12T14:32:33.864+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:215)
[2023-04-12T14:32:33.864+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:176)
[2023-04-12T14:32:33.865+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.InputAdapter.inputRDD(WholeStageCodegenExec.scala:525)
[2023-04-12T14:32:33.865+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.InputRDDCodegen.inputRDDs(WholeStageCodegenExec.scala:453)
[2023-04-12T14:32:33.866+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.InputRDDCodegen.inputRDDs$(WholeStageCodegenExec.scala:452)
[2023-04-12T14:32:33.866+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.InputAdapter.inputRDDs(WholeStageCodegenExec.scala:496)
[2023-04-12T14:32:33.867+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.ProjectExec.inputRDDs(basicPhysicalOperators.scala:50)
[2023-04-12T14:32:33.867+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.WholeStageCodegenExec.doExecute(WholeStageCodegenExec.scala:746)
[2023-04-12T14:32:33.868+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$execute$1(SparkPlan.scala:180)
[2023-04-12T14:32:33.869+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$executeQuery$1(SparkPlan.scala:218)
[2023-04-12T14:32:33.870+0000] {subprocess.py:93} INFO - 	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
[2023-04-12T14:32:33.870+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:215)
[2023-04-12T14:32:33.871+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:176)
[2023-04-12T14:32:33.872+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.datasources.FileFormatWriter$.write(FileFormatWriter.scala:177)
[2023-04-12T14:32:33.872+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand.run(InsertIntoHadoopFsRelationCommand.scala:188)
[2023-04-12T14:32:33.873+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.command.DataWritingCommandExec.sideEffectResult$lzycompute(commands.scala:108)
[2023-04-12T14:32:33.873+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.command.DataWritingCommandExec.sideEffectResult(commands.scala:106)
[2023-04-12T14:32:33.874+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.command.DataWritingCommandExec.doExecute(commands.scala:131)
[2023-04-12T14:32:33.874+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$execute$1(SparkPlan.scala:180)
[2023-04-12T14:32:33.875+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$executeQuery$1(SparkPlan.scala:218)
[2023-04-12T14:32:33.875+0000] {subprocess.py:93} INFO - 	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
[2023-04-12T14:32:33.876+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:215)
[2023-04-12T14:32:33.876+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:176)
[2023-04-12T14:32:33.877+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.QueryExecution.toRdd$lzycompute(QueryExecution.scala:132)
[2023-04-12T14:32:33.877+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.QueryExecution.toRdd(QueryExecution.scala:131)
[2023-04-12T14:32:33.878+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.DataFrameWriter.$anonfun$runCommand$1(DataFrameWriter.scala:989)
[2023-04-12T14:32:33.878+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$5(SQLExecution.scala:103)
[2023-04-12T14:32:33.879+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:163)
[2023-04-12T14:32:33.880+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:90)
[2023-04-12T14:32:33.880+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:775)
[2023-04-12T14:32:33.881+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:64)
[2023-04-12T14:32:33.882+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:989)
[2023-04-12T14:32:33.882+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:438)
[2023-04-12T14:32:33.883+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:415)
[2023-04-12T14:32:33.884+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:293)
[2023-04-12T14:32:33.884+0000] {subprocess.py:93} INFO - 	at com.google.cloud.spark.bigquery.write.BigQueryWriteHelper.writeDataFrameToBigQuery(BigQueryWriteHelper.java:106)
[2023-04-12T14:32:33.885+0000] {subprocess.py:93} INFO - 	at com.google.cloud.spark.bigquery.write.BigQueryDeprecatedIndirectInsertableRelation.insert(BigQueryDeprecatedIndirectInsertableRelation.java:43)
[2023-04-12T14:32:33.885+0000] {subprocess.py:93} INFO - 	at com.google.cloud.spark.bigquery.write.CreatableRelationProviderHelper.createRelation(CreatableRelationProviderHelper.java:54)
[2023-04-12T14:32:33.886+0000] {subprocess.py:93} INFO - 	at com.google.cloud.spark.bigquery.BigQueryRelationProvider.createRelation(BigQueryRelationProvider.scala:107)
[2023-04-12T14:32:33.887+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:46)
[2023-04-12T14:32:33.887+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:70)
[2023-04-12T14:32:33.888+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:68)
[2023-04-12T14:32:33.888+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.command.ExecutedCommandExec.doExecute(commands.scala:90)
[2023-04-12T14:32:33.889+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$execute$1(SparkPlan.scala:180)
[2023-04-12T14:32:33.889+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$executeQuery$1(SparkPlan.scala:218)
[2023-04-12T14:32:33.889+0000] {subprocess.py:93} INFO - 	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
[2023-04-12T14:32:33.890+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:215)
[2023-04-12T14:32:33.890+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:176)
[2023-04-12T14:32:33.891+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.QueryExecution.toRdd$lzycompute(QueryExecution.scala:132)
[2023-04-12T14:32:33.891+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.QueryExecution.toRdd(QueryExecution.scala:131)
[2023-04-12T14:32:33.891+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.DataFrameWriter.$anonfun$runCommand$1(DataFrameWriter.scala:989)
[2023-04-12T14:32:33.892+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$5(SQLExecution.scala:103)
[2023-04-12T14:32:33.892+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:163)
[2023-04-12T14:32:33.893+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:90)
[2023-04-12T14:32:33.893+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:775)
[2023-04-12T14:32:33.894+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:64)
[2023-04-12T14:32:33.894+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:989)
[2023-04-12T14:32:33.895+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:438)
[2023-04-12T14:32:33.896+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:415)
[2023-04-12T14:32:33.897+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:301)
[2023-04-12T14:32:33.898+0000] {subprocess.py:93} INFO - 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[2023-04-12T14:32:33.898+0000] {subprocess.py:93} INFO - 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
[2023-04-12T14:32:33.898+0000] {subprocess.py:93} INFO - 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[2023-04-12T14:32:33.899+0000] {subprocess.py:93} INFO - 	at java.lang.reflect.Method.invoke(Method.java:498)
[2023-04-12T14:32:33.899+0000] {subprocess.py:93} INFO - 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
[2023-04-12T14:32:33.900+0000] {subprocess.py:93} INFO - 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)
[2023-04-12T14:32:33.900+0000] {subprocess.py:93} INFO - 	at py4j.Gateway.invoke(Gateway.java:282)
[2023-04-12T14:32:33.901+0000] {subprocess.py:93} INFO - 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
[2023-04-12T14:32:33.902+0000] {subprocess.py:93} INFO - 	at py4j.commands.CallCommand.execute(CallCommand.java:79)
[2023-04-12T14:32:33.903+0000] {subprocess.py:93} INFO - 	at py4j.GatewayConnection.run(GatewayConnection.java:238)
[2023-04-12T14:32:33.904+0000] {subprocess.py:93} INFO - 	at java.lang.Thread.run(Thread.java:750)
[2023-04-12T14:32:33.904+0000] {subprocess.py:93} INFO - 23/04/12 14:32:31 INFO com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystem: Successfully repaired 'gs://dataproc-temp-europe-west6-834475897757-zf5hpybi/.spark-bigquery-local-1681309906807-331fd399-50e0-4a46-94f6-b8bc671011b4/' directory.
[2023-04-12T14:32:33.905+0000] {subprocess.py:93} INFO - Traceback (most recent call last):
[2023-04-12T14:32:33.906+0000] {subprocess.py:93} INFO -   File "/tmp/b3b5273645a74ad28fa0fb96ba71794a/transform_pyspark.py", line 246, in <module>
[2023-04-12T14:32:33.906+0000] {subprocess.py:93} INFO -     df.write.format('bigquery') \
[2023-04-12T14:32:33.907+0000] {subprocess.py:93} INFO -   File "/usr/lib/spark/python/lib/pyspark.zip/pyspark/sql/readwriter.py", line 1107, in save
[2023-04-12T14:32:33.907+0000] {subprocess.py:93} INFO -   File "/usr/lib/spark/python/lib/py4j-0.10.9-src.zip/py4j/java_gateway.py", line 1304, in __call__
[2023-04-12T14:32:33.908+0000] {subprocess.py:93} INFO -   File "/usr/lib/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 111, in deco
[2023-04-12T14:32:33.908+0000] {subprocess.py:93} INFO -   File "/usr/lib/spark/python/lib/py4j-0.10.9-src.zip/py4j/protocol.py", line 326, in get_return_value
[2023-04-12T14:32:33.908+0000] {subprocess.py:93} INFO - py4j.protocol.Py4JJavaError: An error occurred while calling o304.save.
[2023-04-12T14:32:33.909+0000] {subprocess.py:93} INFO - : com.google.cloud.bigquery.connector.common.BigQueryConnectorException: Failed to write to BigQuery
[2023-04-12T14:32:33.909+0000] {subprocess.py:93} INFO - 	at com.google.cloud.spark.bigquery.write.BigQueryWriteHelper.writeDataFrameToBigQuery(BigQueryWriteHelper.java:111)
[2023-04-12T14:32:33.910+0000] {subprocess.py:93} INFO - 	at com.google.cloud.spark.bigquery.write.BigQueryDeprecatedIndirectInsertableRelation.insert(BigQueryDeprecatedIndirectInsertableRelation.java:43)
[2023-04-12T14:32:33.910+0000] {subprocess.py:93} INFO - 	at com.google.cloud.spark.bigquery.write.CreatableRelationProviderHelper.createRelation(CreatableRelationProviderHelper.java:54)
[2023-04-12T14:32:33.910+0000] {subprocess.py:93} INFO - 	at com.google.cloud.spark.bigquery.BigQueryRelationProvider.createRelation(BigQueryRelationProvider.scala:107)
[2023-04-12T14:32:33.911+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:46)
[2023-04-12T14:32:33.912+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:70)
[2023-04-12T14:32:33.912+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:68)
[2023-04-12T14:32:33.913+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.command.ExecutedCommandExec.doExecute(commands.scala:90)
[2023-04-12T14:32:33.913+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$execute$1(SparkPlan.scala:180)
[2023-04-12T14:32:33.914+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$executeQuery$1(SparkPlan.scala:218)
[2023-04-12T14:32:33.914+0000] {subprocess.py:93} INFO - 	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
[2023-04-12T14:32:33.914+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:215)
[2023-04-12T14:32:33.915+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:176)
[2023-04-12T14:32:33.915+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.QueryExecution.toRdd$lzycompute(QueryExecution.scala:132)
[2023-04-12T14:32:33.915+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.QueryExecution.toRdd(QueryExecution.scala:131)
[2023-04-12T14:32:33.916+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.DataFrameWriter.$anonfun$runCommand$1(DataFrameWriter.scala:989)
[2023-04-12T14:32:33.917+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$5(SQLExecution.scala:103)
[2023-04-12T14:32:33.917+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:163)
[2023-04-12T14:32:33.918+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:90)
[2023-04-12T14:32:33.918+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:775)
[2023-04-12T14:32:33.919+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:64)
[2023-04-12T14:32:33.919+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:989)
[2023-04-12T14:32:33.920+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:438)
[2023-04-12T14:32:33.920+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:415)
[2023-04-12T14:32:33.920+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:301)
[2023-04-12T14:32:33.921+0000] {subprocess.py:93} INFO - 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[2023-04-12T14:32:33.921+0000] {subprocess.py:93} INFO - 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
[2023-04-12T14:32:33.921+0000] {subprocess.py:93} INFO - 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[2023-04-12T14:32:33.922+0000] {subprocess.py:93} INFO - 	at java.lang.reflect.Method.invoke(Method.java:498)
[2023-04-12T14:32:33.922+0000] {subprocess.py:93} INFO - 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
[2023-04-12T14:32:33.923+0000] {subprocess.py:93} INFO - 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)
[2023-04-12T14:32:33.923+0000] {subprocess.py:93} INFO - 	at py4j.Gateway.invoke(Gateway.java:282)
[2023-04-12T14:32:33.923+0000] {subprocess.py:93} INFO - 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
[2023-04-12T14:32:33.924+0000] {subprocess.py:93} INFO - 	at py4j.commands.CallCommand.execute(CallCommand.java:79)
[2023-04-12T14:32:33.924+0000] {subprocess.py:93} INFO - 	at py4j.GatewayConnection.run(GatewayConnection.java:238)
[2023-04-12T14:32:33.925+0000] {subprocess.py:93} INFO - 	at java.lang.Thread.run(Thread.java:750)
[2023-04-12T14:32:33.925+0000] {subprocess.py:93} INFO - Caused by: org.apache.spark.SparkException: Job aborted.
[2023-04-12T14:32:33.926+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.datasources.FileFormatWriter$.write(FileFormatWriter.scala:231)
[2023-04-12T14:32:33.926+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand.run(InsertIntoHadoopFsRelationCommand.scala:188)
[2023-04-12T14:32:33.926+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.command.DataWritingCommandExec.sideEffectResult$lzycompute(commands.scala:108)
[2023-04-12T14:32:33.927+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.command.DataWritingCommandExec.sideEffectResult(commands.scala:106)
[2023-04-12T14:32:33.928+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.command.DataWritingCommandExec.doExecute(commands.scala:131)
[2023-04-12T14:32:33.928+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$execute$1(SparkPlan.scala:180)
[2023-04-12T14:32:33.929+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$executeQuery$1(SparkPlan.scala:218)
[2023-04-12T14:32:33.930+0000] {subprocess.py:93} INFO - 	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
[2023-04-12T14:32:33.930+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:215)
[2023-04-12T14:32:33.930+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:176)
[2023-04-12T14:32:33.931+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.QueryExecution.toRdd$lzycompute(QueryExecution.scala:132)
[2023-04-12T14:32:33.931+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.QueryExecution.toRdd(QueryExecution.scala:131)
[2023-04-12T14:32:33.932+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.DataFrameWriter.$anonfun$runCommand$1(DataFrameWriter.scala:989)
[2023-04-12T14:32:33.933+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$5(SQLExecution.scala:103)
[2023-04-12T14:32:33.933+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:163)
[2023-04-12T14:32:33.934+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:90)
[2023-04-12T14:32:33.935+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:775)
[2023-04-12T14:32:33.935+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:64)
[2023-04-12T14:32:33.935+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:989)
[2023-04-12T14:32:33.936+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:438)
[2023-04-12T14:32:33.937+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:415)
[2023-04-12T14:32:33.937+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:293)
[2023-04-12T14:32:33.938+0000] {subprocess.py:93} INFO - 	at com.google.cloud.spark.bigquery.write.BigQueryWriteHelper.writeDataFrameToBigQuery(BigQueryWriteHelper.java:106)
[2023-04-12T14:32:33.938+0000] {subprocess.py:93} INFO - 	... 35 more
[2023-04-12T14:32:33.938+0000] {subprocess.py:93} INFO - Caused by: org.apache.spark.sql.AnalysisException: Attribute name "('Unnamed: 0_level_0', 'GP')" contains invalid character(s) among " ,;{}()\n\t=". Please use alias to rename it.
[2023-04-12T14:32:33.939+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.datasources.parquet.ParquetSchemaConverter$.checkConversionRequirement(ParquetSchemaConverter.scala:579)
[2023-04-12T14:32:33.939+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.datasources.parquet.ParquetSchemaConverter$.checkFieldName(ParquetSchemaConverter.scala:570)
[2023-04-12T14:32:33.939+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport$.$anonfun$setSchema$2(ParquetWriteSupport.scala:485)
[2023-04-12T14:32:33.940+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport$.$anonfun$setSchema$2$adapted(ParquetWriteSupport.scala:485)
[2023-04-12T14:32:33.940+0000] {subprocess.py:93} INFO - 	at scala.collection.immutable.List.foreach(List.scala:431)
[2023-04-12T14:32:33.941+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.datasources.parquet.ParquetWriteSupport$.setSchema(ParquetWriteSupport.scala:485)
[2023-04-12T14:32:33.941+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.datasources.parquet.ParquetFileFormat.buildReaderWithPartitionValues(ParquetFileFormat.scala:220)
[2023-04-12T14:32:33.941+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.FileSourceScanExec.inputRDD$lzycompute(DataSourceScanExec.scala:407)
[2023-04-12T14:32:33.942+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.FileSourceScanExec.inputRDD(DataSourceScanExec.scala:398)
[2023-04-12T14:32:33.942+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.FileSourceScanExec.doExecuteColumnar(DataSourceScanExec.scala:497)
[2023-04-12T14:32:33.943+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$executeColumnar$1(SparkPlan.scala:207)
[2023-04-12T14:32:33.943+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$executeQuery$1(SparkPlan.scala:218)
[2023-04-12T14:32:33.943+0000] {subprocess.py:93} INFO - 	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
[2023-04-12T14:32:33.944+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:215)
[2023-04-12T14:32:33.944+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.executeColumnar(SparkPlan.scala:203)
[2023-04-12T14:32:33.944+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.InputAdapter.doExecuteColumnar(WholeStageCodegenExec.scala:519)
[2023-04-12T14:32:33.945+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$executeColumnar$1(SparkPlan.scala:207)
[2023-04-12T14:32:33.945+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$executeQuery$1(SparkPlan.scala:218)
[2023-04-12T14:32:33.946+0000] {subprocess.py:93} INFO - 	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
[2023-04-12T14:32:33.946+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:215)
[2023-04-12T14:32:33.946+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.executeColumnar(SparkPlan.scala:203)
[2023-04-12T14:32:33.947+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.ColumnarToRowExec.inputRDDs(Columnar.scala:202)
[2023-04-12T14:32:33.947+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.WholeStageCodegenExec.doExecute(WholeStageCodegenExec.scala:746)
[2023-04-12T14:32:33.948+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$execute$1(SparkPlan.scala:180)
[2023-04-12T14:32:33.949+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$executeQuery$1(SparkPlan.scala:218)
[2023-04-12T14:32:33.949+0000] {subprocess.py:93} INFO - 	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
[2023-04-12T14:32:33.950+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:215)
[2023-04-12T14:32:33.950+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:176)
[2023-04-12T14:32:33.950+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.columnar.CachedRDDBuilder.buildBuffers(InMemoryRelation.scala:252)
[2023-04-12T14:32:33.951+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.columnar.CachedRDDBuilder.cachedColumnBuffers(InMemoryRelation.scala:221)
[2023-04-12T14:32:33.951+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.columnar.InMemoryTableScanExec.filteredCachedBatches(InMemoryTableScanExec.scala:144)
[2023-04-12T14:32:33.952+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.columnar.InMemoryTableScanExec.inputRDD$lzycompute(InMemoryTableScanExec.scala:95)
[2023-04-12T14:32:33.952+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.columnar.InMemoryTableScanExec.inputRDD(InMemoryTableScanExec.scala:81)
[2023-04-12T14:32:33.952+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.columnar.InMemoryTableScanExec.doExecute(InMemoryTableScanExec.scala:155)
[2023-04-12T14:32:33.953+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$execute$1(SparkPlan.scala:180)
[2023-04-12T14:32:33.954+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$executeQuery$1(SparkPlan.scala:218)
[2023-04-12T14:32:33.954+0000] {subprocess.py:93} INFO - 	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
[2023-04-12T14:32:33.954+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:215)
[2023-04-12T14:32:33.955+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:176)
[2023-04-12T14:32:33.955+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.InputAdapter.inputRDD(WholeStageCodegenExec.scala:525)
[2023-04-12T14:32:33.956+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.InputRDDCodegen.inputRDDs(WholeStageCodegenExec.scala:453)
[2023-04-12T14:32:33.956+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.InputRDDCodegen.inputRDDs$(WholeStageCodegenExec.scala:452)
[2023-04-12T14:32:33.956+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.InputAdapter.inputRDDs(WholeStageCodegenExec.scala:496)
[2023-04-12T14:32:33.957+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.ProjectExec.inputRDDs(basicPhysicalOperators.scala:50)
[2023-04-12T14:32:33.957+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.WholeStageCodegenExec.doExecute(WholeStageCodegenExec.scala:746)
[2023-04-12T14:32:33.958+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$execute$1(SparkPlan.scala:180)
[2023-04-12T14:32:33.958+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$executeQuery$1(SparkPlan.scala:218)
[2023-04-12T14:32:33.958+0000] {subprocess.py:93} INFO - 	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
[2023-04-12T14:32:33.959+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:215)
[2023-04-12T14:32:33.959+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:176)
[2023-04-12T14:32:33.959+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.GenerateExec.doExecute(GenerateExec.scala:80)
[2023-04-12T14:32:33.960+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$execute$1(SparkPlan.scala:180)
[2023-04-12T14:32:33.960+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$executeQuery$1(SparkPlan.scala:218)
[2023-04-12T14:32:33.961+0000] {subprocess.py:93} INFO - 	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
[2023-04-12T14:32:33.961+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:215)
[2023-04-12T14:32:33.961+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:176)
[2023-04-12T14:32:33.962+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.InputAdapter.inputRDD(WholeStageCodegenExec.scala:525)
[2023-04-12T14:32:33.962+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.InputRDDCodegen.inputRDDs(WholeStageCodegenExec.scala:453)
[2023-04-12T14:32:33.962+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.InputRDDCodegen.inputRDDs$(WholeStageCodegenExec.scala:452)
[2023-04-12T14:32:33.963+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.InputAdapter.inputRDDs(WholeStageCodegenExec.scala:496)
[2023-04-12T14:32:33.964+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.ProjectExec.inputRDDs(basicPhysicalOperators.scala:50)
[2023-04-12T14:32:33.964+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.WholeStageCodegenExec.doExecute(WholeStageCodegenExec.scala:746)
[2023-04-12T14:32:33.965+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$execute$1(SparkPlan.scala:180)
[2023-04-12T14:32:33.965+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.$anonfun$executeQuery$1(SparkPlan.scala:218)
[2023-04-12T14:32:33.965+0000] {subprocess.py:93} INFO - 	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
[2023-04-12T14:32:33.966+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:215)
[2023-04-12T14:32:33.966+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:176)
[2023-04-12T14:32:33.967+0000] {subprocess.py:93} INFO - 	at org.apache.spark.sql.execution.datasources.FileFormatWriter$.write(FileFormatWriter.scala:177)
[2023-04-12T14:32:33.968+0000] {subprocess.py:93} INFO - 	... 57 more
[2023-04-12T14:32:33.969+0000] {subprocess.py:93} INFO - 
[2023-04-12T14:32:33.969+0000] {subprocess.py:93} INFO - 23/04/12 14:32:31 INFO org.sparkproject.jetty.server.AbstractConnector: Stopped Spark@77b58774{HTTP/1.1, (http/1.1)}{0.0.0.0:0}
[2023-04-12T14:32:37.105+0000] {subprocess.py:93} INFO - ERROR: (gcloud.dataproc.jobs.submit.pyspark) Job [b3b5273645a74ad28fa0fb96ba71794a] failed with error:
[2023-04-12T14:32:37.107+0000] {subprocess.py:93} INFO - Google Cloud Dataproc Agent reports job failure. If logs are available, they can be found at:
[2023-04-12T14:32:37.108+0000] {subprocess.py:93} INFO - https://console.cloud.google.com/dataproc/jobs/b3b5273645a74ad28fa0fb96ba71794a?project=nfl-de-project&region=europe-west6
[2023-04-12T14:32:37.109+0000] {subprocess.py:93} INFO - gcloud dataproc jobs wait 'b3b5273645a74ad28fa0fb96ba71794a' --region 'europe-west6' --project 'nfl-de-project'
[2023-04-12T14:32:37.110+0000] {subprocess.py:93} INFO - https://console.cloud.google.com/storage/browser/nfl-spark-staging_nfl-de-project/google-cloud-dataproc-metainfo/cf386a87-5cdc-4f46-9dda-06a203a6bb84/jobs/b3b5273645a74ad28fa0fb96ba71794a/
[2023-04-12T14:32:37.111+0000] {subprocess.py:93} INFO - gs://nfl-spark-staging_nfl-de-project/google-cloud-dataproc-metainfo/cf386a87-5cdc-4f46-9dda-06a203a6bb84/jobs/b3b5273645a74ad28fa0fb96ba71794a/driveroutput
[2023-04-12T14:32:37.290+0000] {subprocess.py:97} INFO - Command exited with return code 1
[2023-04-12T14:32:37.301+0000] {taskinstance.py:1776} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.9/site-packages/airflow/decorators/base.py", line 217, in execute
    return_value = super().execute(context)
  File "/home/airflow/.local/lib/python3.9/site-packages/airflow/operators/python.py", line 175, in execute
    return_value = self.execute_callable()
  File "/home/airflow/.local/lib/python3.9/site-packages/airflow/operators/python.py", line 192, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
  File "/opt/airflow/dags/data_ingestion.py", line 224, in task_pyspark
    operator.execute(context={})
  File "/home/airflow/.local/lib/python3.9/site-packages/airflow/operators/bash.py", line 196, in execute
    raise AirflowException(
airflow.exceptions.AirflowException: Bash command failed. The command returned a non-zero exit code 1.
[2023-04-12T14:32:37.315+0000] {taskinstance.py:1327} INFO - Marking task as FAILED. dag_id=nfl_transformation_dag, task_id=task_pyspark, execution_date=20230411T000000, start_date=20230412T143129, end_date=20230412T143237
[2023-04-12T14:32:37.340+0000] {standard_task_runner.py:100} ERROR - Failed to execute job 963 for task task_pyspark (Bash command failed. The command returned a non-zero exit code 1.; 12216)
[2023-04-12T14:32:37.367+0000] {local_task_job.py:212} INFO - Task exited with return code 1
[2023-04-12T14:32:37.385+0000] {taskinstance.py:2596} INFO - 0 downstream tasks scheduled from follow-on schedule check
